#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace store2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="store")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertpurchase(purchase instance);
    partial void Updatepurchase(purchase instance);
    partial void Deletepurchase(purchase instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::store2.Properties.Settings.Default.storeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<purchase> purchases
		{
			get
			{
				return this.GetTable<purchase>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_num;
		
		private string _username;
		
		private string _password;
		
		private string _fname;
		
		private string _lname;
		
		private System.Nullable<decimal> _balance;
		
		private string _STREET;
		
		private string _CITY;
		
		private string _STATE;
		
		private string _ZIP;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _cc;
		
		private int _realBalance;
		
		private EntitySet<purchase> _purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_numChanging(int value);
    partial void Oncust_numChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void OnSTREETChanging(string value);
    partial void OnSTREETChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnccChanging(string value);
    partial void OnccChanged();
    partial void OnrealBalanceChanging(int value);
    partial void OnrealBalanceChanged();
    #endregion
		
		public customer()
		{
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_num", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cust_num
		{
			get
			{
				return this._cust_num;
			}
			set
			{
				if ((this._cust_num != value))
				{
					this.Oncust_numChanging(value);
					this.SendPropertyChanging();
					this._cust_num = value;
					this.SendPropertyChanged("cust_num");
					this.Oncust_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(8)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET", DbType="VarChar(20)")]
		public string STREET
		{
			get
			{
				return this._STREET;
			}
			set
			{
				if ((this._STREET != value))
				{
					this.OnSTREETChanging(value);
					this.SendPropertyChanging();
					this._STREET = value;
					this.SendPropertyChanged("STREET");
					this.OnSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(10)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="NChar(2)")]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP", DbType="NChar(9)")]
		public string ZIP
		{
			get
			{
				return this._ZIP;
			}
			set
			{
				if ((this._ZIP != value))
				{
					this.OnZIPChanging(value);
					this.SendPropertyChanging();
					this._ZIP = value;
					this.SendPropertyChanged("ZIP");
					this.OnZIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc", DbType="VarChar(16)")]
		public string cc
		{
			get
			{
				return this._cc;
			}
			set
			{
				if ((this._cc != value))
				{
					this.OnccChanging(value);
					this.SendPropertyChanging();
					this._cc = value;
					this.SendPropertyChanged("cc");
					this.OnccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_realBalance", DbType="INT NOT NULL")]
		public int realBalance
		{
			get
			{
				return this._realBalance;
			}
			set
			{
				if ((this._realBalance != value))
				{
					this.OnrealBalanceChanging(value);
					this.SendPropertyChanging();
					this._realBalance = value;
					this.SendPropertyChanged("realBalance");
					this.OnrealBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_purchase", Storage="_purchases", ThisKey="cust_num", OtherKey="cust_num")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _item_num;
		
		private string _description;
		
		private System.Nullable<decimal> _price;
		
		private EntitySet<purchase> _purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_numChanging(int value);
    partial void Onitem_numChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public item()
		{
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_num", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int item_num
		{
			get
			{
				return this._item_num;
			}
			set
			{
				if ((this._item_num != value))
				{
					this.Onitem_numChanging(value);
					this.SendPropertyChanging();
					this._item_num = value;
					this.SendPropertyChanged("item_num");
					this.Onitem_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_purchase", Storage="_purchases", ThisKey="item_num", OtherKey="item_num")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchases")]
	public partial class purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purchase_num;
		
		private System.Nullable<int> _cust_num;
		
		private System.Nullable<int> _item_num;
		
		private System.Nullable<System.DateTime> _purchase_date;
		
		private System.Nullable<int> _qty;
		
		private System.Nullable<decimal> _total;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpurchase_numChanging(int value);
    partial void Onpurchase_numChanged();
    partial void Oncust_numChanging(System.Nullable<int> value);
    partial void Oncust_numChanged();
    partial void Onitem_numChanging(System.Nullable<int> value);
    partial void Onitem_numChanged();
    partial void Onpurchase_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpurchase_dateChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    #endregion
		
		public purchase()
		{
			this._customer = default(EntityRef<customer>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_num", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int purchase_num
		{
			get
			{
				return this._purchase_num;
			}
			set
			{
				if ((this._purchase_num != value))
				{
					this.Onpurchase_numChanging(value);
					this.SendPropertyChanging();
					this._purchase_num = value;
					this.SendPropertyChanged("purchase_num");
					this.Onpurchase_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_num", DbType="Int")]
		public System.Nullable<int> cust_num
		{
			get
			{
				return this._cust_num;
			}
			set
			{
				if ((this._cust_num != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_numChanging(value);
					this.SendPropertyChanging();
					this._cust_num = value;
					this.SendPropertyChanged("cust_num");
					this.Oncust_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_num", DbType="Int")]
		public System.Nullable<int> item_num
		{
			get
			{
				return this._item_num;
			}
			set
			{
				if ((this._item_num != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_numChanging(value);
					this.SendPropertyChanging();
					this._item_num = value;
					this.SendPropertyChanged("item_num");
					this.Onitem_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_date", DbType="Date")]
		public System.Nullable<System.DateTime> purchase_date
		{
			get
			{
				return this._purchase_date;
			}
			set
			{
				if ((this._purchase_date != value))
				{
					this.Onpurchase_dateChanging(value);
					this.SendPropertyChanging();
					this._purchase_date = value;
					this.SendPropertyChanged("purchase_date");
					this.Onpurchase_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_purchase", Storage="_customer", ThisKey="cust_num", OtherKey="cust_num", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._cust_num = value.cust_num;
					}
					else
					{
						this._cust_num = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_purchase", Storage="_item", ThisKey="item_num", OtherKey="item_num", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._item_num = value.item_num;
					}
					else
					{
						this._item_num = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
